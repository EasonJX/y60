Marching Cubes - Algorithmus zur berechnung von Oberflächen in 
dreidimensionalen medizinischen Daten


Einleitung

Dreidimensionale medizinische Daten werden heute meist in einzelnen 
Schichten (slices) betrachtet. Bei diesen Schnittdarstellungen des 
menschlichen Körpers ist es häufig schwer, räumliche Strukturen zu 
erkennen. Ziel verschiedener Volume rendering Techniken ist die 
Transformation der dreidimensionalen Daten in ein zweidimensionales Bild, 
bei dem jeweils bestimmte Strukturen besonders gut erkennbar werden.

Ein möglicher Ansatz ist es, die dreidimensionalen Daten als Voxelmodel zu 
betrachten und je nach ihrem Wert mit unterschiedlichen transparenten 
und möglicherweise selbstleuchtenden Materialen zu versehen. Mittels 
Image-Composing (Übereinanderlegen der einzelnen Schichten), oder 
Volume-Raytracing bzw. Raycasting kann dann vorzugsweise in einer 
animierten Sequenz der gesamte Datesatz betrachtet werden.

Ein anderer Ansatz ist es, ein dreidimensionales geometrisches Modell 
einer Oberfläche aus den Voxeldaten zu berechnen und dann mittels 
konventioneller Visualisierungsmethoden diese Oberfläche darzustellen.

Der Marching Cubes Algorithmus (engl. verfolgende, marschierende 
Würfel) ist ein typischer Vertreter der letztgenannten 
Visualisierungsmethode. Er wurde unabhängig von Wyvill und McPheeters 
1986 [WYVI86] und von Lorensen und Cline 1987 [LORE87] vorgestellt.

Er berechnet mit einem Divide and Conquer Verfahren Dreiecksoberflächen 
gleicher Dichte aus dreidimensionalen medizinischen Daten. Der 
Algorithmus betrachtet den äquidistanten Datensatz als viele regelmäßig 
gestapelte gleichgroße Würfel. Jeder Würfel wird durch 8 Gitterpunkte 
bestimmt von denen er je vier mit jedem seiner direkten Nachbarn teilt 
(mit Ausnahne der Randwürfel).

Bild: Gitternetz mit Würfel

Zunächst wird ein Schwellwert festgelegt, der die Dichte der zu 
bestimmenden Oberfläche darstellt. Es wird nun mit einem 3D Scanline-
Verfahren durch alle Würfel gegangen und anhand des Schwellwertes und 
einer Fall-Tabelle entschieden, ob und wenn ja, wie die Oberfläche den 
Würfel schneidet. Die 256 möglichen Fälle reduzieren sich durch 
Rotationssymmetrie auf 14, aus denen dann genau die Anzahl, Art und 
Ausrichtung der Dreiecke hervorgeht.

Das so generierte Dreiecksgitternetz läßt sich anschließend durch eine 
konventionelle 3D-Render-Software mit einem Material versehen, 
beleuchten und darstellen. Sollen nicht nur vorgerechnete 
Animationssequenzen betrachtet werden, sondern die Oberfläche auch 
interaktiv betrachtet werden, muß, je nach Komplexität des 
Dreiecksgitternetzes, vorher noch eine Polygonreduzierung stattfinden.

Die Nachteile dieses Verfahrens zum einen, daß immer nur eine Oberfläche 
eine Dichte zue Zeit betrachtet werden kann. Außerdem können weiche 
Schichtübergänge (Dichteänderungen) nicht berücksichtigt werden, da 
immer eine binäre Entscheidung getroffen werden muß, ob, und wenn wo 
die Oberfläche verläuft.


Dreidimensionale medizinische Daten

- Arten, Quellen, Auflösung, Fehler, Aussagekraft, Aufbereitung, 
Genauigkeit
- z.B. CT-Scanner Daten des Kopfes [-1000, 3000] mit Schwellwert 200
für Knochen


Marching Cubes Algorithmus
   Prinzip
   2D-Fall (marching-square)
   Übertragung ins 3D
   Gradient -> Normale


Implementierung

Ziel der Implementierung ist es,
a) das Würfel-Klassifizierungs-Kriterium (innen, außen, geschnitten)
und
b) die anschließende Berechnung des Durchgangs der Oberfläche durch den 
Würfel
so zu gestalten, daß es ohne größeren Aufwand möglich ist, diese durch 
neue Funktionen zu ersetzen.

Für Punkt a) wird normalerweise ein einfaches Schwellwertverfahren 
angewendet. Denkbar wäre auch ein Verfahren, bei dem z.B. die 2. 
Ableitung als Kriterium dient. Bei Punkt b) wird üblicherweise linear 
interpoliert.

Es scheint sinnvoll, einen 2-Phasen Ansatz zu wählen.

In der ersten Phase werden alle Würfel nach innenliegend, außenliegend, 
oder geschnitten markiert, 

Klassifizierung der Würfel kann entweder rekursiv, wie bei einem 
Füllalgorithmus, oder inkrementell erfolgen.


Bemerkungen zur Implementierung
- Muß an Maschine angepaßt werden (Speicher, Plattenplatz, CPU-Leistung)
- Objektorientierter Ansatz
- evt. parallelisieren für Mehrprozessormaschinen
- Offene flexible Schnittstellen zum Experimentieren
- (z.B. 2. Ableitung anstatt eines Schwellwertes)
- Mögliche Optimierungen



Literaturverzeichnis

[LORE87]
William E. Lorensen, Harvey E. Cline
Marching Cubes: A High Resolution 3D Surface Construction Algorithm
Computer Graphics Volume 21, Number 4, Juli 1987, S. 163-169
(SIGGRAPH '87 Conference Proceedings)

[WYVI86]
B. Wyvill, C. McPheeters, G. Wyvill
Data Structure for Soft Object
The Visual Computer, Volume 2, Number 4, S. 227-234

