//=============================================================================
// Copyright (C) 2003 ART+COM AG Berlin
//
// These coded instructions, statements, and computer programs contain
// unpublished proprietary information of ART+COM AG Berlin, and
// are copy protected by law. They may not be disclosed to third parties
// or copied or duplicated in any form, in whole or in part, without the
// specific, prior written permission of ART+COM AG Berlin.
//=============================================================================

#include "roundCornerUtil.cg"

struct app2vert { 
    float4 Position : POSITION;
    float4 Color : COLOR0;
    float4 TexCoord0 : TEXCOORD0;
};

struct vert2frag {
    float4 Vertex    : POSITION;
    float4 Color     : COLOR0;
    float2 TexCoord0 : TEXCOORD0;
    
};

vert2frag mainVertex(app2vert IN,    
                     uniform float4x4 GL_MODELVIEW_PROJECTION,
                     uniform float4x4 GL_TEXTURE)
{
    vert2frag OUT;

    OUT.Vertex = mul(GL_MODELVIEW_PROJECTION, IN.Position);
    OUT.TexCoord0 = mul(GL_TEXTURE, IN.TexCoord0).xy;
    OUT.Color = IN.Color;
    
    return OUT;
}

float4 mainFragment(vert2frag IN,
                    uniform sampler2D backgroundTex,
                    uniform float radius,
                    uniform float cornerDistance,
                    uniform float aspectRatio,
                    uniform float4 cornerToggle)
                     : COLOR
{
    return getRoundCornerPixel(IN.TexCoord0, IN.Color, tex2D(backgroundTex, IN.TexCoord0), radius, cornerDistance, aspectRatio, cornerToggle);
}





